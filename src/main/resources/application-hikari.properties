# -------------------- Database Connection Pool Name --------------------
# Always name your connection pools properly: it will help you understand the situation faster.
spring.datasource.hikari.pool-name=hikari-cp-service-pool

# -------------------- Logging --------------------
# If a descent monitoring system is not available in your setup, it is still possible to track connection usage statistics
# via plain application logs.
# You can turn on and off the mentioned logging at runtime with Spring Boot Actuator
# curl -i -X POST http://$SERVER_HOST:$SERVER_PORT/actuator/loggers/com.zaxxer.hikari -H 'Content-Type: application/json' \
#-d '{"configuredLevel": "TRACE"}'
#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.com.zaxxer.hikari=TRACE

# -------------------- Actuator --------------------
# http://localhost:8080/actuator/metrics/hikaricp.connections.active

# -------------------- Fixed Pool Size --------------------
# Read this
# https://stackoverflow.com/questions/28987540/why-does-hikaricp-recommend-fixed-size-pool-for-better-performance
# Having a fixed pools size is better than a growing pool
# Default pool size = 10
spring.datasource.hikari.maximum-pool-size=10

# Default: same as maximumPoolSize
#spring.datasource.hikari.minimum-idle=10

# -------------------- Leak detection --------------------
# This property controls the amount of time that a connection can be out of the pool before a message is logged indicating
# a possible connection leak.
# A value of 0 means leak detection is disabled.
# Lowest acceptable value for enabling leak detection is 2000 (2 seconds). Default: 0
# If connection is not returned back to pool in 20 seconds a stack trace is shown
# The leak detection mechanism schedules a task when a new proxy connection is created and cancels it on connection closing.
# The scheduled task by itself is quite simple: it encapsulates the stack trace of the place where it was created and prints
# it to the logs on its execution. The task is scheduled to be executed by a Housekeeper executor service.
spring.datasource.hikari.leak-detection-threshold=20000

# -------------------- Timeout Parameters --------------------

# Default connection timeout: 30000 (30 seconds)
#spring.datasource.hikari.connection-timeout=3000

# Default idle timeout: 600000 (10 minutes)
#spring.datasource.hikari.idle-timeout=60000
